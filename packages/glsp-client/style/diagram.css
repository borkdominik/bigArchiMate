:root {
   --sprotty-background: var(--theia-editor-background);
   --sprotty-edge: #6d6d6d;
   --sprotty-edge-selected: var(--theia-focusBorder);
   --sprotty-border: var(--theia-editor-foreground);

   --node-stroke: var(--sprotty-edge);
   --arrow-empty-fill: var(--sprotty-background);
   --arrow-filled-fill: var(--sprotty-edge);

   /* Color codes adapted from https://www.archimatetool.com/downloads/colour-schemes/ArchiMate%20Standard%20-%203.2.prefs */
   --bg-application: #b5ffff;
   --bg-business: #ffffb5;
   --bg-implementation-and-migration: #ffe0e0;
   --bg-motivation: #ccccff;
   --bg-strategy: #f5deaa;
   --bg-technology: #c9e7b7;
   --bg-location: #edcfe2;
   --bg-default: #ffffff;
   --bg-junction: var(--sprotty-edge);
}

.grid-background .sprotty-graph,
.grid-background.sprotty-graph {
   --background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30"><g><line x1="10" y1="15" x2="20" y2="15" stroke="black" stroke-width="1" stroke-linecap="round" stroke-opacity="0.15" /><line x1="15" y1="10" x2="15" y2="20" stroke="black" stroke-width="1" stroke-linecap="round" stroke-opacity="0.15" /></g></svg>');
   background-image: var(--background-image);
   background-size: var(--grid-background-width) var(--grid-background-height);
   background-position: var(--grid-background-x) var(--grid-background-y);
}

.sprotty-graph {
   font-size: 15pt;
   height: 100%;
   background-size: 11px;
   background: var(--sprotty-background);
}

.sprotty text {
   font-family: monospace;
}

.sprotty-edge {
   stroke: var(--sprotty-edge);
   stroke-width: 2px;
}

.sprotty-node:not(.selected, .mouseover) {
   stroke: var(--node-stroke);
   stroke-width: 2px;
}

.sprotty-node.mouseover:not(.selected),
.sprotty-edge.mouseover:not(.selected),
.sprotty-edge.mouseover:not(.selected) .arrow,
.sprotty-edge.mouseover:not(.selected) .circle {
   stroke: var(--theia-focusBorder);
   stroke-width: 2px;
   opacity: 1;
}

.sprotty-node.selected,
.sprotty-edge.selected {
   stroke: var(--theia-focusBorder);
   stroke-width: 2px;
}

.sprotty-node.selected {
   stroke-dasharray: 6px 3px;
}

.diagram-node .header-label {
   font-weight: bold;
   letter-spacing: 0.5px;
}

.label-edit input {
   text-align: center;
   background-color: transparent;
   outline-color: transparent;
   border: 0;
   letter-spacing: 0.9px;
}

.diagram-node.bg-application > rect,
.diagram-node.bg-application > path {
   fill: var(--bg-application);
}

.diagram-node.bg-business > rect,
.diagram-node.bg-business > path {
   fill: var(--bg-business);
}

.diagram-node.bg-implementation-and-migration > rect,
.diagram-node.bg-implementation-and-migration > path {
   fill: var(--bg-implementation-and-migration);
}

.diagram-node.bg-motivation > rect,
.diagram-node.bg-motivation > path {
   fill: var(--bg-motivation);
}

.diagram-node.bg-strategy > rect,
.diagram-node.bg-strategy > path {
   fill: var(--bg-strategy);
}

.diagram-node.bg-technology > rect,
.diagram-node.bg-technology > path {
   fill: var(--bg-technology);
}

.diagram-node.bg-location > rect,
.diagram-node.bg-location > path {
   fill: var(--bg-location);
}

.diagram-node.bg-default > rect,
.diagram-node.bg-default > path {
   fill: var(--bg-default);
}

.diagram-node.bg-junction > circle {
   fill: var(--bg-junction);
}

.sprotty-edge.realization :not(.arrow),
.sprotty-edge.access :not(.arrow) {
   stroke-dasharray: 3px 3px;
}

.sprotty-edge.influence :not(.arrow),
.sprotty-edge.flow :not(.arrow) {
   stroke-dasharray: 10px 3px;
}

.sprotty-edge .arrow,
.sprotty-edge .circle {
   fill: var(--arrow-filled-fill);
   color: var(--arrow-filled-fill);
}

.sprotty-edge.aggregation .arrow,
.sprotty-edge.realization .arrow,
.sprotty-edge.specialization .arrow {
   fill: var(--arrow-empty-fill);
   color: var(--arrow-empty-fill);
}

.sprotty-edge.serving .arrow,
.sprotty-edge.access .arrow,
.sprotty-edge.influence .arrow {
   fill: none;
   color: transparent;
}

.sprotty-edge.mouseover .arrow,
.sprotty-edge.mouseover .circle,
.sprotty-edge.selected .arrow,
.sprotty-edge.selected .circle {
   fill: currentColor !important;
}
